name: prerelease NuGet

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    # also works with windows-latest and macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v1
    #  latest image has .NET already installed!
    #- name: Setup .NET Core
    #  uses: actions/setup-dotnet@v1
    #  with:
    #    dotnet-version: 2.2.108
    - name: Build with dotnet and create prerelease nupkg
      run: dotnet build --configuration Release --version-suffix prerelease-$(date +%Y%m%d%H%M%S)
      shell: bash
    #  run:  dotnet build --configuration Release --version-suffix prerelease-$(Get-Date -Format "yyyyMMddHHmmss")
    #- name: Install NuGet client
    #  uses: warrenbuckley/Setup-Nuget@v1
    #- name: Setup nuget config # use .NuGet.config for now 2/2 GH bug https://github.com/NuGet/Home/issues/8580
    #  run: sed 's/GHPackagesToken/${{ secrets.GHPackagesToken }}/g' .nuget.config > nuget.config
    #- name: Add GitHub Packages source to NuGet
    #  run: nuget sources add -name "GitHubPackages" -Source https://nuget.pkg.github.com/vslee/index.json -Username vslee -Password ${{ secrets.GHPackagesToken }}
    #- name: list dir
    #  run: |
    #       dir
    #       cd IEXSharp
    #       dir
    #       cd bin
    #       dir
    #       cd Release
    #       dir
    - name: Publish nuget to GitHub Packages
      run: |
           for f in ./src/ActionNuget/bin/Release/*.nupkg
           do
             curl -vX PUT -u "nnyegaard:${{ secrets.GHPackagesToken }}" -F package=@$f https://nuget.pkg.github.com/nnyegaard/
           done
      shell: bash
    #  run: dotnet nuget push .\IEXSharp\bin\PreRelease\*.nupkg -s "GitHubPackages"